name: Build Library

on:
  push:
    branches:
      - main
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 20.x
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Configure Git
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

      - name: Install dependencies
        run: npm install

      - name: Update version
        run: npm run release

#      - name: Commit version change
#        run: |
#          git add .
#          git status
#          git commit -am "chore: update version [skip ci]"
#        continue-on-error: true

      - name: Push version change
        run: git push origin main

      - name: Extract version from package.json
        id: extract-version
        run: |
          VERSION=$(node -e "console.log(require('./package.json').version)")
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Switch to gh-pages branch or create it if it doesn't exist
        run: |
          git fetch
          git checkout gh-pages || git checkout -b gh-pages
          git reset --hard origin/main

      - name: Build for production
        run: |
          mkdir -p temp_dist/${{ env.version }}
          npm install
          npm run build
          mv dist/* temp_dist/${{ env.version }}/

      - name: Commit and push changes
        run: |
          git add .
          git commit -m "chore: deploy to github pages"
          git push -f origin gh-pages

      - name: Output URL to file
        id: url-to-file
        run: |
          REPO_OWNER=$(echo "${{ github.repository }}" | cut -d '/' -f 1)
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d '/' -f 2)
          URL="https://${REPO_OWNER}.github.io/${REPO_NAME}/temp_dist/${{ env.version }}/index.js"
          echo "URL to file: $URL"
          echo "url=$URL" >> $GITHUB_ENV

      - name: Output script tag
        run: |
          echo "Script tag:"
          echo "<script src=\"$url\"></script>"

      - name: Output JavaScript script to inject script into page console
        run: |
          echo "JavaScript script to inject script into page (copy and paste into the page console):"
          echo "(function(){const s=document.createElement('script');s.src='$url';document.head.appendChild(s);})();"
